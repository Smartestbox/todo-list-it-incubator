[{"/Users/igorolkhov/Desktop/projects/it-incubator/todo-list-it-incubator/src/index.tsx":"1","/Users/igorolkhov/Desktop/projects/it-incubator/todo-list-it-incubator/src/App.tsx":"2","/Users/igorolkhov/Desktop/projects/it-incubator/todo-list-it-incubator/src/TodoList.tsx":"3"},{"size":445,"mtime":1673281928452,"results":"4","hashOfConfig":"5"},{"size":2011,"mtime":1673886956552,"results":"6","hashOfConfig":"5"},{"size":2277,"mtime":1673892086013,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"uikfy8",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"11"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/igorolkhov/Desktop/projects/it-incubator/todo-list-it-incubator/src/index.tsx",[],[],[],"/Users/igorolkhov/Desktop/projects/it-incubator/todo-list-it-incubator/src/App.tsx",["19"],[],"import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport {TaskType} from './TodoList';\nimport {v1} from \"uuid\";\n\ntype FilterValuesType = 'all' | 'active' | 'completed'\n\nfunction App() {\n\n\n    const todoListTitle_1: string = 'What to learn';\n    const [tasks, setTasks] = useState<Array<TaskType>>([\n        {id: v1(), title: 'HTML', isDone: true},\n        {id: v1(), title: 'CSS', isDone: true},\n        {id: v1(), title: 'JS/TS', isDone: false}\n    ])\n\n    const removeTask = (taskId: string) => {\n        setTasks(tasks.filter(task => task.id !== taskId))\n        // console.log(tasks)\n    }\n\n    const addTask = (title:string) => {\n        const newTask: TaskType = {\n            id: v1(),\n            title: title,\n            isDone: false\n        }\n        setTasks([...tasks, newTask])\n    }\n\n    // нужно ко вторнику\n    // useEffect(() => {\n    //     console.log(tasks)\n    // }, [tasks])\n\n    const [filter, setFilter] = useState<FilterValuesType>('all')\n\n    const changeFilter = (filter: FilterValuesType) => {\n        setFilter(filter)\n    }\n\n    const getFilteredTaskForRender =\n        (tasks: Array<TaskType>, filter: FilterValuesType): Array<TaskType> => {\n            if (filter === 'active') {\n                return tasks.filter(task => task.isDone === false)\n            }\n            if (filter === 'completed') {\n                return tasks.filter(task => task.isDone === true)\n            } else {\n                return tasks\n            }\n        }\n\n    const filteredTasksForRender = getFilteredTaskForRender(tasks, filter)\n\n    return (\n        <div className=\"App\">\n            <TodoList\n                title={todoListTitle_1}\n                tasks={filteredTasksForRender}\n                removeTask={removeTask}\n                changeFilter={changeFilter}\n                addTask={addTask}\n            />\n            {/* <TodoList title={todoListTitle_2}/> */}\n        </div>\n    );\n};\n\nexport default App;\n","/Users/igorolkhov/Desktop/projects/it-incubator/todo-list-it-incubator/src/TodoList.tsx",[],[],{"ruleId":"20","severity":1,"message":"21","line":1,"column":16,"nodeType":"22","messageId":"23","endLine":1,"endColumn":25},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]