{"ast":null,"code":"var _jsxFileName = \"/Users/igorolkhov/Desktop/projects/it-incubator/todolist-it-incubator/src/TodoList.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = props => {\n  // let tasksList;\n  // if(props.tasks.length === 0){\n  //     tasksList = <span>Your taskslist is empty</span>\n  // } else {\n  //     tasksList = props.tasks.map((task:TaskType) => {\n  //         return (\n  //             <li>\n  //                 <input type=\"checkbox\" checked={task.isDone}/>\n  //                 <span>{task.title}</span>\n  //             </li>\n  //         )\n  //     })\n  // }\n\n  let tasksList = props.tasks.length ? props.tasks.map(task => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.isDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Your taskslist is empty\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasksList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","TodoList","props","tasksList","tasks","length","map","task","isDone","title"],"sources":["/Users/igorolkhov/Desktop/projects/it-incubator/todolist-it-incubator/src/TodoList.tsx"],"sourcesContent":["import React from 'react';\n\ntype TodoListPropsType = {\n    title: string\n    tasks: Array<TaskType>\n}\n\nexport type TaskType = {\n    id: number\n    title: string\n    isDone: boolean\n}\n\nconst TodoList = (props: TodoListPropsType) => {\n    // let tasksList;\n    // if(props.tasks.length === 0){\n    //     tasksList = <span>Your taskslist is empty</span>\n    // } else {\n    //     tasksList = props.tasks.map((task:TaskType) => {\n    //         return (\n    //             <li>\n    //                 <input type=\"checkbox\" checked={task.isDone}/>\n    //                 <span>{task.title}</span>\n    //             </li>\n    //         )\n    //     })\n    // }\n\n\n    let tasksList = props.tasks.length\n      ? props.tasks.map((task:TaskType) => {\n            return (\n                <li>\n                    <input type=\"checkbox\" checked={task.isDone}/>\n                    <span>{task.title}</span>\n                </li>\n            )\n        })\n      : <span>Your taskslist is empty</span>\n\n\n    return (\n        <div>\n            <h3>{props.title}</h3>\n            <div>\n                <input/>\n                <button>+</button>\n            </div>\n            <ul>\n                {tasksList}\n            </ul>\n            <div>\n                <button>All</button>\n                <button>Active</button>\n                <button>Completed</button>\n            </div>\n        </div>\n\n    );\n};\n\nexport default TodoList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAa1B,MAAMC,QAAQ,GAAIC,KAAwB,IAAK;EAC3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,IAAIC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAACC,MAAM,GAC9BH,KAAK,CAACE,KAAK,CAACE,GAAG,CAAEC,IAAa,IAAK;IAC/B,oBACI;MAAA,wBACI;QAAO,IAAI,EAAC,UAAU;QAAC,OAAO,EAAEA,IAAI,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE,eAC9C;QAAA,UAAOD,IAAI,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB;EAEb,CAAC,CAAC,gBACF;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAoC;EAGxC,oBACI;IAAA,wBACI;MAAA,UAAKP,KAAK,CAACO;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA,wBACI;QAAA;QAAA;QAAA;MAAA,QAAQ,eACR;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA,QAChB,eACN;MAAA,UACKN;IAAS;MAAA;MAAA;MAAA;IAAA,QACT,eACL;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAGd,CAAC;AAAC,KA9CIF,QAAQ;AAgDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}