{"ast":null,"code":"var _jsxFileName = \"/Users/igorolkhov/Desktop/projects/it-incubator/todolist-it-incubator/src/TodoList.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = props => {\n  let tasksList;\n  if (props.tasks.length === 0) {\n    tasksList = /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your taskslist is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this);\n  } else {\n    tasksList = props.tasks.map(task => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: props.tasks[0].isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: props.tasks[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    });\n  }\n  // return (\n  // \t<div>\n\n  // \t\t<h3>{props.title}</h3>\n  // \t\t<div>\n  // \t\t\t<input />\n  // \t\t\t<button>+</button>\n  // \t\t</div>\n  // \t\t<ul>\n  // \t\t\t<li>\n  // \t\t\t\t<input type=\"checkbox\" checked={props.tasks[0].isDone} /> <span>{props.tasks[0].title}</span>\n  // \t\t\t</li>\n  // \t\t\t<li>\n  // \t\t\t\t<input type=\"checkbox\" checked={props.tasks[1].isDone} /> <span>{props.tasks[1].title}</span>\n  // \t\t\t</li>\n  // \t\t\t<li>\n  // \t\t\t\t<input type=\"checkbox\" checked={props.tasks[2].isDone} /> <span>{props.tasks[2].title}</span>\n  // \t\t\t</li>\n  // \t\t</ul>\n  // \t\t<div>\n  // \t\t\t<button>All</button>\n  // \t\t\t<button>Active</button>\n  // \t\t\t<button>Completed</button>\n  // \t\t</div>\n  // \t</div>\n  // );\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","TodoList","props","tasksList","tasks","length","map","task","isDone","title"],"sources":["/Users/igorolkhov/Desktop/projects/it-incubator/todolist-it-incubator/src/TodoList.tsx"],"sourcesContent":["import React from \"react\";\n\ntype TodoListPropsType =  {\n    title: string,\n    tasks: Array<TaskType>\n}\n\nexport type TaskType = {\n    id: number,\n    title: string,\n    isDone: boolean,\n}\n\n\nconst TodoList = (props: TodoListPropsType) => {\n    let tasksList;\n    if(props.tasks.length === 0) {\n        tasksList = <span>Your taskslist is empty</span>\n    } else {\n        tasksList = props.tasks.map(task => {\n            return (\n                <li>\n\t\t\t\t\t<input type=\"checkbox\" checked={props.tasks[0].isDone} /> <span>{props.tasks[0].title}</span>\n\t\t\t\t</li>\n            )\n        })\n    }\n\t// return (\n\t// \t<div>\n            \n\t// \t\t<h3>{props.title}</h3>\n\t// \t\t<div>\n\t// \t\t\t<input />\n\t// \t\t\t<button>+</button>\n\t// \t\t</div>\n\t// \t\t<ul>\n\t// \t\t\t<li>\n\t// \t\t\t\t<input type=\"checkbox\" checked={props.tasks[0].isDone} /> <span>{props.tasks[0].title}</span>\n\t// \t\t\t</li>\n\t// \t\t\t<li>\n\t// \t\t\t\t<input type=\"checkbox\" checked={props.tasks[1].isDone} /> <span>{props.tasks[1].title}</span>\n\t// \t\t\t</li>\n\t// \t\t\t<li>\n\t// \t\t\t\t<input type=\"checkbox\" checked={props.tasks[2].isDone} /> <span>{props.tasks[2].title}</span>\n\t// \t\t\t</li>\n\t// \t\t</ul>\n\t// \t\t<div>\n\t// \t\t\t<button>All</button>\n\t// \t\t\t<button>Active</button>\n\t// \t\t\t<button>Completed</button>\n\t// \t\t</div>\n\t// \t</div>\n\t// );\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAc1B,MAAMC,QAAQ,GAAIC,KAAwB,IAAK;EAC3C,IAAIC,SAAS;EACb,IAAGD,KAAK,CAACE,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACzBF,SAAS,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoC;EACpD,CAAC,MAAM;IACHA,SAAS,GAAGD,KAAK,CAACE,KAAK,CAACE,GAAG,CAACC,IAAI,IAAI;MAChC,oBACI;QAAA,wBACX;UAAO,IAAI,EAAC,UAAU;UAAC,OAAO,EAAEL,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC,CAACI;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,oBAAC;UAAA,UAAON,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC,CAACK;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACzF;IAED,CAAC,CAAC;EACN;EACH;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD,CAAC;AAAC,KAvCIR,QAAQ;AAyCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}